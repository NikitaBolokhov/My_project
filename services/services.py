import random
import requests

from lexicon.lexicon_ru import LEXICON_RU


# –ò—Å—Ö–æ–¥–Ω–∏–∫–∏ –¥–ª—è –∏–≥—Ä—ã
ATTEMPTS: int = 6

# –°–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
users: dict = {}


# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
def get_random_number() -> int:
    return random.randint(1, 100)


# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
def show_attempts(attempt: int) -> str:
    if attempt > 1:
        return f'–î–æ—Å—Ç—É–ø–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: <b>{attempt}</b>.'
    elif attempt == 1:
        return '<b>–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–∞—Å—å –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞</b>ü§û'
    else:
        return '<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–ø—ã—Ç–æ–∫ –±–æ–ª—å—à–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å</b>üòø'


# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –∫–æ—Ç–∏–∫–æ–º
def get_random_cat() -> tuple[bool, str]:
    cat_response = requests.get('https://api.thecatapi.com/v1/images/search')
    if cat_response.status_code == 200:
        cat_link = cat_response.json()[0]['url']
        return True, cat_link
    else:
        return False,


# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ª—É—á–∞–π–Ω—É—é –≥–∏—Ñ–∫—É
def get_random_gif() -> tuple[bool, str]:
    gif_response = requests.get('https://yesno.wtf/api')
    if gif_response.status_code == 200:
        gif_link = gif_response.json()['image']
        return True, gif_link
    else:
        return False,


# –§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –±–æ—Ç–∞ –≤ –∏–≥—Ä–µ
def get_bot_choice() -> str:
    return random.choice(['rock', 'paper', 'scissors'])


# –§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –∫–ª—é—á –∏–∑ —Å–ª–æ–≤–∞—Ä—è, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É
# —Ö—Ä–∞–Ω–∏—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–µ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç - –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def _normalize_user_answer(user_answer: str) -> str:
    for key in LEXICON_RU:
        if LEXICON_RU[key] == user_answer:
            break
    return key


# –§—É–Ω–∫—Ü–∏—è, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
def get_winner(user_choice: str, bot_choice: str) -> str:
    user_choice = _normalize_user_answer(user_choice)
    rules: dict[str, str] = {'rock': 'scissors',
                             'scissors': 'paper',
                             'paper': 'rock'}
    if user_choice == bot_choice:
        return 'nobody_won'
    elif rules[user_choice] == bot_choice:
        return 'user_won'
    else:
        return 'bot_won'
